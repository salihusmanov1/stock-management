{"ast":null,"code":"// src/components/badge.ts\nimport { cssVar, defineStyle, defineStyleConfig } from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar $bg = cssVar(\"badge-bg\");\nvar $fg = cssVar(\"badge-color\");\nvar $shadow = cssVar(\"badge-shadow\");\nvar baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n  bg: $bg.reference,\n  color: $fg.reference,\n  boxShadow: $shadow.reference\n});\nvar variantSolid = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const dark = transparentize(`${c}.500`, 0.6)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.500`,\n    [$fg.variable]: `colors.white`,\n    _dark: {\n      [$bg.variable]: dark,\n      [$fg.variable]: `colors.whiteAlpha.800`\n    }\n  };\n});\nvar variantSubtle = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.100`,\n    [$fg.variable]: `colors.${c}.800`,\n    _dark: {\n      [$bg.variable]: darkBg,\n      [$fg.variable]: `colors.${c}.200`\n    }\n  };\n});\nvar variantOutline = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme);\n  return {\n    [$fg.variable]: `colors.${c}.500`,\n    _dark: {\n      [$fg.variable]: darkColor\n    },\n    [$shadow.variable]: `inset 0 0 0px 1px ${$fg.reference}`\n  };\n});\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\"\n  }\n});\nexport { badgeTheme };","map":{"version":3,"names":["cssVar","defineStyle","defineStyleConfig","transparentize","$bg","$fg","$shadow","baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","bg","reference","color","boxShadow","variantSolid","props","colorScheme","c","theme","dark","variable","_dark","variantSubtle","darkBg","variantOutline","darkColor","variants","solid","subtle","outline","badgeTheme","defaultProps","variant"],"sources":["C:/Users/AREKAN-HP/Desktop/SQA/node_modules/@chakra-ui/theme/dist/chunk-EZTALQC2.mjs"],"sourcesContent":["// src/components/badge.ts\nimport {\n  cssVar,\n  defineStyle,\n  defineStyleConfig\n} from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar $bg = cssVar(\"badge-bg\");\nvar $fg = cssVar(\"badge-color\");\nvar $shadow = cssVar(\"badge-shadow\");\nvar baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n  bg: $bg.reference,\n  color: $fg.reference,\n  boxShadow: $shadow.reference\n});\nvar variantSolid = defineStyle((props) => {\n  const { colorScheme: c, theme } = props;\n  const dark = transparentize(`${c}.500`, 0.6)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.500`,\n    [$fg.variable]: `colors.white`,\n    _dark: {\n      [$bg.variable]: dark,\n      [$fg.variable]: `colors.whiteAlpha.800`\n    }\n  };\n});\nvar variantSubtle = defineStyle((props) => {\n  const { colorScheme: c, theme } = props;\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.100`,\n    [$fg.variable]: `colors.${c}.800`,\n    _dark: {\n      [$bg.variable]: darkBg,\n      [$fg.variable]: `colors.${c}.200`\n    }\n  };\n});\nvar variantOutline = defineStyle((props) => {\n  const { colorScheme: c, theme } = props;\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme);\n  return {\n    [$fg.variable]: `colors.${c}.500`,\n    _dark: {\n      [$fg.variable]: darkColor\n    },\n    [$shadow.variable]: `inset 0 0 0px 1px ${$fg.reference}`\n  };\n});\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\"\n  }\n});\n\nexport {\n  badgeTheme\n};\n"],"mappings":"AAAA;AACA,SACEA,MAAM,EACNC,WAAW,EACXC,iBAAiB,QACZ,0BAA0B;AACjC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,IAAIC,GAAG,GAAGJ,MAAM,CAAC,UAAU,CAAC;AAC5B,IAAIK,GAAG,GAAGL,MAAM,CAAC,aAAa,CAAC;AAC/B,IAAIM,OAAO,GAAGN,MAAM,CAAC,cAAc,CAAC;AACpC,IAAIO,SAAS,GAAGN,WAAW,CAAC;EAC1BO,EAAE,EAAE,CAAC;EACLC,aAAa,EAAE,WAAW;EAC1BC,QAAQ,EAAE,IAAI;EACdC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,MAAM;EAClBC,EAAE,EAAET,GAAG,CAACU,SAAS;EACjBC,KAAK,EAAEV,GAAG,CAACS,SAAS;EACpBE,SAAS,EAAEV,OAAO,CAACQ;AACrB,CAAC,CAAC;AACF,IAAIG,YAAY,GAAGhB,WAAW,CAAEiB,KAAK,IAAK;EACxC,MAAM;IAAEC,WAAW,EAAEC,CAAC;IAAEC;EAAM,CAAC,GAAGH,KAAK;EACvC,MAAMI,IAAI,GAAGnB,cAAc,CAAE,GAAEiB,CAAE,MAAK,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC;EACnD,OAAO;IACL,CAACjB,GAAG,CAACmB,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjC,CAACf,GAAG,CAACkB,QAAQ,GAAI,cAAa;IAC9BC,KAAK,EAAE;MACL,CAACpB,GAAG,CAACmB,QAAQ,GAAGD,IAAI;MACpB,CAACjB,GAAG,CAACkB,QAAQ,GAAI;IACnB;EACF,CAAC;AACH,CAAC,CAAC;AACF,IAAIE,aAAa,GAAGxB,WAAW,CAAEiB,KAAK,IAAK;EACzC,MAAM;IAAEC,WAAW,EAAEC,CAAC;IAAEC;EAAM,CAAC,GAAGH,KAAK;EACvC,MAAMQ,MAAM,GAAGvB,cAAc,CAAE,GAAEiB,CAAE,MAAK,EAAE,IAAI,CAAC,CAACC,KAAK,CAAC;EACtD,OAAO;IACL,CAACjB,GAAG,CAACmB,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjC,CAACf,GAAG,CAACkB,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjCI,KAAK,EAAE;MACL,CAACpB,GAAG,CAACmB,QAAQ,GAAGG,MAAM;MACtB,CAACrB,GAAG,CAACkB,QAAQ,GAAI,UAASH,CAAE;IAC9B;EACF,CAAC;AACH,CAAC,CAAC;AACF,IAAIO,cAAc,GAAG1B,WAAW,CAAEiB,KAAK,IAAK;EAC1C,MAAM;IAAEC,WAAW,EAAEC,CAAC;IAAEC;EAAM,CAAC,GAAGH,KAAK;EACvC,MAAMU,SAAS,GAAGzB,cAAc,CAAE,GAAEiB,CAAE,MAAK,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC;EACxD,OAAO;IACL,CAAChB,GAAG,CAACkB,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjCI,KAAK,EAAE;MACL,CAACnB,GAAG,CAACkB,QAAQ,GAAGK;IAClB,CAAC;IACD,CAACtB,OAAO,CAACiB,QAAQ,GAAI,qBAAoBlB,GAAG,CAACS,SAAU;EACzD,CAAC;AACH,CAAC,CAAC;AACF,IAAIe,QAAQ,GAAG;EACbC,KAAK,EAAEb,YAAY;EACnBc,MAAM,EAAEN,aAAa;EACrBO,OAAO,EAAEL;AACX,CAAC;AACD,IAAIM,UAAU,GAAG/B,iBAAiB,CAAC;EACjCK,SAAS;EACTsB,QAAQ;EACRK,YAAY,EAAE;IACZC,OAAO,EAAE,QAAQ;IACjBhB,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,SACEc,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}